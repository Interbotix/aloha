<launch>

  <arg name="robot_model_leader"                  default="wx250s"/>
  <arg name="robot_model_follower"                default="vx300s"/>

  <arg name="base_link_leader"                    default="base_link"/>
  <arg name="base_link_follower"                  default="base_link"/>

  <arg name="leader_modes_left"                   default="$(find aloha)/config/leader_modes_left.yaml"/>
  <arg name="follower_modes_left"                 default="$(find aloha)/config/follower_modes_left.yaml"/>
  <arg name="leader_modes_right"                  default="$(find aloha)/config/leader_modes_right.yaml"/>
  <arg name="follower_modes_right"                default="$(find aloha)/config/follower_modes_right.yaml"/>

  <arg name="launch_driver"                       default="true"/>
  <arg name="use_sim"                             default="false"/>
  <arg name="use_cameras"                         default="false"/>

  <arg name="camera_type"                         default="usb"/> <!-- "realsense", "usb" -->
  <arg name="is_mobile"                           default="true"/>
  <arg name="use_base"                            default="$(arg is_mobile)"/>

  <arg name="robot_name_leader_left"              value="leader_left"/>
  <arg name="robot_name_follower_left"            value="follower_left"/>
  <arg name="robot_name_leader_right"             value="leader_right"/>
  <arg name="robot_name_follower_right"           value="follower_right"/>

  <group if="$(arg launch_driver)">
    <include file="$(find interbotix_xsarm_control)/launch/xsarm_control.launch">
      <arg name="robot_model"                       value="$(arg robot_model_leader)"/>
      <arg name="robot_name"                        value="$(arg robot_name_leader_left)"/>
      <arg name="base_link_frame"                   value="$(arg base_link_leader)"/>
      <arg name="use_world_frame"                   value="false"/>
      <arg name="use_rviz"                          value="false"/>
      <arg name="mode_configs"                      value="$(arg leader_modes_left)"/>
      <arg name="use_sim"                           value="$(arg use_sim)"/>
    </include>

    <include file="$(find interbotix_xsarm_control)/launch/xsarm_control.launch">
      <arg name="robot_model"                       value="$(arg robot_model_leader)"/>
      <arg name="robot_name"                        value="$(arg robot_name_leader_right)"/>
      <arg name="base_link_frame"                   value="$(arg base_link_leader)"/>
      <arg name="use_world_frame"                   value="false"/>
      <arg name="use_rviz"                          value="false"/>
      <arg name="mode_configs"                      value="$(arg leader_modes_right)"/>
      <arg name="use_sim"                           value="$(arg use_sim)"/>
    </include>

    <include file="$(find interbotix_xsarm_control)/launch/xsarm_control.launch">
      <arg name="robot_model"                       value="$(arg robot_model_follower)"/>
      <arg name="robot_name"                        value="$(arg robot_name_follower_left)"/>
      <arg name="base_link_frame"                   value="$(arg base_link_follower)"/>
      <arg name="use_world_frame"                   value="false"/>
      <arg name="use_rviz"                          value="false"/>
      <arg name="mode_configs"                      value="$(arg follower_modes_left)"/>
      <arg name="use_sim"                           value="$(arg use_sim)"/>
    </include>

    <include file="$(find interbotix_xsarm_control)/launch/xsarm_control.launch">
      <arg name="robot_model"                       value="$(arg robot_model_follower)"/>
      <arg name="robot_name"                        value="$(arg robot_name_follower_right)"/>
      <arg name="base_link_frame"                   value="$(arg base_link_follower)"/>
      <arg name="use_world_frame"                   value="false"/>
      <arg name="use_rviz"                          value="false"/>
      <arg name="mode_configs"                      value="$(arg follower_modes_right)"/>
      <arg name="use_sim"                           value="$(arg use_sim)"/>
    </include>
  </group>

  <node
    name="leader_left_transform_broadcaster"
    pkg="tf2_ros"
    type="static_transform_publisher"
    args="0 -0.25 0 0 0 0 /world /$(arg robot_name_leader_left)/base_link"/>

   <node
    name="leader_right_transform_broadcaster"
    pkg="tf2_ros"
    type="static_transform_publisher"
    args="0 -0.25 0 0 0 0 /world /$(arg robot_name_leader_right)/base_link"/>

  <node
    name="follower_left_transform_broadcaster"
    pkg="tf2_ros"
    type="static_transform_publisher"
    args="0 0.25 0 0 0 0 /world /$(arg robot_name_follower_left)/base_link"/>

  <node
    name="follower_right_transform_broadcaster"
    pkg="tf2_ros"
    type="static_transform_publisher"
    args="0 0.25 0 0 0 0 /world /$(arg robot_name_follower_right)/base_link"/>

  <group if="$(arg use_cameras)">
    <arg name="cam_high_name"         default="cam_high"/>
    <arg name="cam_low_name"          default="cam_low"/>
    <arg name="cam_left_wrist_name"   default="cam_left_wrist"/>
    <arg name="cam_right_wrist_name"  default="cam_right_wrist"/>

    <group if="$(eval camera_type == 'usb')">
      <node name="usb_cam_high" pkg="usb_cam" type="usb_cam_node" output="screen" >
        <param name="video_device"    value="/dev/CAM_HIGH"/>
        <param name="framerate"       value="60"/>
        <param name="image_width"     value="640"/>
        <param name="image_height"    value="480"/>
        <param name="pixel_format"    value="yuyv"/>
        <param name="camera_frame_id" value="$(arg cam_high_name)"/>
        <param name="io_method"       value="mmap"/>
        <param name="autofocus"       value="false"/>
        <param name="focus"           value="5"/>
        <param name="autoexposure"    value="true"/>
      </node>

      <!-- cam_low is only launched if platform is a mobile ALOHA -->
      <node name="usb_cam_low" pkg="usb_cam" type="usb_cam_node" output="screen" if="$(arg is_mobile)">
        <param name="video_device"    value="/dev/CAM_LOW"/>
        <param name="framerate"       value="60"/>
        <param name="image_width"     value="640"/>
        <param name="image_height"    value="480"/>
        <param name="pixel_format"    value="yuyv"/>
        <param name="camera_frame_id" value="$(arg cam_low_name)"/>
        <param name="io_method"       value="mmap"/>
        <param name="autofocus"       value="false"/>
        <param name="focus"           value="35"/>
        <param name="autoexposure"    value="true"/>
      </node>

      <node name="usb_cam_left_wrist" pkg="usb_cam" type="usb_cam_node" output="screen" >
        <param name="video_device"    value="/dev/CAM_LEFT_WRIST"/>
        <param name="framerate"       value="60"/>
        <param name="image_width"     value="640"/>
        <param name="image_height"    value="480"/>
        <param name="pixel_format"    value="yuyv"/>
        <param name="camera_frame_id" value="$(arg cam_left_wrist_name)"/>
        <param name="io_method"       value="mmap"/>
        <param name="autofocus"       value="false"/>
        <param name="focus"           value="40"/>
        <param name="autoexposure"    value="true"/>
      </node>

      <node name="usb_cam_right_wrist" pkg="usb_cam" type="usb_cam_node" output="screen" >
        <param name="video_device"    value="/dev/CAM_RIGHT_WRIST"/>
        <param name="framerate"       value="60"/>
        <param name="image_width"     value="640"/>
        <param name="image_height"    value="480"/>
        <param name="pixel_format"    value="yuyv"/>
        <param name="camera_frame_id" value="$(arg cam_right_wrist_name)"/>
        <param name="io_method"       value="mmap"/>
        <param name="autofocus"       value="false"/>
        <param name="focus"           value="40"/>
        <param name="autoexposure"    value="true"/>
      </node>
    </group> <!-- if="$(eval camera_type == 'usb')" -->

    <group if="$(eval camera_type == 'realsense')">
      <group ns="$(arg cam_high_name)">
        <include file="$(find realsense2_camera)/launch/includes/nodelet.launch.xml">
          <arg name="usb_port_id"        value="/dev/CAM_HIGH"/>
          <arg name="color_width"        value="640"/>
          <arg name="color_height"       value="480"/>
          <arg name="color_fps"          default="60"/>
        </include>
      </group>

      <group ns="$(arg cam_low_name)">
        <!-- cam_low is only launched if platform is a mobile ALOHA -->
        <include file="$(find realsense2_camera)/launch/includes/nodelet.launch.xml" if="$(arg is_mobile)">
          <arg name="usb_port_id"        value="/dev/CAM_LOW"/>
          <arg name="color_width"        value="640"/>
          <arg name="color_height"       value="480"/>
          <arg name="color_fps"          default="60"/>
        </include>
      </group>

      <group ns="$(arg cam_left_wrist_name)">
        <include file="$(find realsense2_camera)/launch/includes/nodelet.launch.xml">
          <arg name="usb_port_id"        value="/dev/CAM_LEFT_WRIST"/>
          <arg name="color_width"        value="640"/>
          <arg name="color_height"       value="480"/>
          <arg name="color_fps"          default="60"/>
        </include>
      </group>

      <group ns="$(arg cam_right_wrist_name)">
        <include file="$(find realsense2_camera)/launch/includes/nodelet.launch.xml">
          <arg name="usb_port_id"        value="/dev/CAM_RIGHT_WRIST"/>
          <arg name="color_width"        value="640"/>
          <arg name="color_height"       value="480"/>
          <arg name="color_fps"          default="60"/>
        </include>
      </group>
    </group> <!-- if="$(eval camera_type == 'realsense')" -->

  </group> <!-- if="$(arg use_cameras)" -->

  <node
    name="slate_driver"
    pkg="interbotix_slate_driver"
    type="slate_base"
    ns="mobile_base"
    if="$(arg use_base)">
  </node>

</launch>
